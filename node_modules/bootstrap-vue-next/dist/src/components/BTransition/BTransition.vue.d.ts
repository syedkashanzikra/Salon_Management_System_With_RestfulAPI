import type { Booleanish, TransitionMode } from '../../types';
import { type TransitionProps } from 'vue';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    mode: {
        type: import("vue").PropType<TransitionMode>;
        default: undefined;
    };
    noFade: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    appear: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    transProps: {
        type: import("vue").PropType<TransitionProps>;
        default: undefined;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    mode: {
        type: import("vue").PropType<TransitionMode>;
        default: undefined;
    };
    noFade: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    appear: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    transProps: {
        type: import("vue").PropType<TransitionProps>;
        default: undefined;
    };
}>>, {
    mode: TransitionMode;
    noFade: Booleanish;
    appear: Booleanish;
    transProps: TransitionProps;
}, {}>, {
    default?: ((props: Record<string, never>) => any) | undefined;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
