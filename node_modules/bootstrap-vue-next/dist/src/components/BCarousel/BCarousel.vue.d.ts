import { BvCarouselEvent } from '../../utils';
import type { Booleanish } from '../../types';
declare const _default: import("vue").DefineComponent<{
    fade: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    background: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    id: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    modelValue: {
        type: import("vue").PropType<number>;
        default: number;
    };
    noHoverPause: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    interval: {
        type: import("vue").PropType<number>;
        default: number;
    };
    imgHeight: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    imgWidth: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    ride: {
        type: import("vue").PropType<boolean | "" | "true" | "false" | "carousel">;
        default: boolean;
    };
    rideReverse: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    controls: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    indicators: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    noTouch: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    noWrap: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    controlsPrevText: {
        type: import("vue").PropType<string>;
        default: string;
    };
    controlsNextText: {
        type: import("vue").PropType<string>;
        default: string;
    };
    indicatorsButtonLabel: {
        type: import("vue").PropType<string>;
        default: string;
    };
    keyboard: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    touchThreshold: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
}, {
    pause: import('../../../node_modules/@vueuse/shared').Fn;
    resume: import('../../../node_modules/@vueuse/shared').Fn;
    prev: () => void;
    next: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    slid: (value: BvCarouselEvent) => void;
    slide: (value: BvCarouselEvent) => void;
    'update:modelValue': (value: number) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    fade: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    background: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    id: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    modelValue: {
        type: import("vue").PropType<number>;
        default: number;
    };
    noHoverPause: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    interval: {
        type: import("vue").PropType<number>;
        default: number;
    };
    imgHeight: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    imgWidth: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    ride: {
        type: import("vue").PropType<boolean | "" | "true" | "false" | "carousel">;
        default: boolean;
    };
    rideReverse: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    controls: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    indicators: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    noTouch: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    noWrap: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    controlsPrevText: {
        type: import("vue").PropType<string>;
        default: string;
    };
    controlsNextText: {
        type: import("vue").PropType<string>;
        default: string;
    };
    indicatorsButtonLabel: {
        type: import("vue").PropType<string>;
        default: string;
    };
    keyboard: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    touchThreshold: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
}>> & {
    "onUpdate:modelValue"?: ((value: number) => any) | undefined;
    onSlide?: ((value: BvCarouselEvent) => any) | undefined;
    onSlid?: ((value: BvCarouselEvent) => any) | undefined;
}, {
    fade: Booleanish;
    background: string;
    id: string;
    modelValue: number;
    noHoverPause: Booleanish;
    interval: number;
    imgHeight: string;
    imgWidth: string;
    ride: boolean | "" | "true" | "false" | "carousel";
    rideReverse: Booleanish;
    controls: Booleanish;
    indicators: Booleanish;
    noTouch: Booleanish;
    noWrap: Booleanish;
    controlsPrevText: string;
    controlsNextText: string;
    indicatorsButtonLabel: string;
    keyboard: Booleanish;
    touchThreshold: string | number;
}, {}>;
export default _default;
