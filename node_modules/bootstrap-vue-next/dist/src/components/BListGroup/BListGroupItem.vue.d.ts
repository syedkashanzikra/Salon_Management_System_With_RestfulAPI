import type { RouteLocationRaw } from 'vue-router';
import type { Booleanish, LinkTarget } from '../../types';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    tag: {
        type: import("vue").PropType<string>;
        default: string;
    };
    target: {
        type: import("vue").PropType<LinkTarget>;
        default: string;
    };
    to: {
        type: import("vue").PropType<RouteLocationRaw>;
        default: undefined;
    };
    button: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    href: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    disabled: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    active: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    variant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: null;
    };
    action: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    tag: {
        type: import("vue").PropType<string>;
        default: string;
    };
    target: {
        type: import("vue").PropType<LinkTarget>;
        default: string;
    };
    to: {
        type: import("vue").PropType<RouteLocationRaw>;
        default: undefined;
    };
    button: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    href: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    disabled: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    active: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    variant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: null;
    };
    action: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
}>>, {
    tag: string;
    target: LinkTarget;
    to: RouteLocationRaw;
    button: Booleanish;
    href: string;
    disabled: Booleanish;
    active: Booleanish;
    variant: keyof import("../../types").BaseColorVariant | null;
    action: Booleanish;
}, {}>, {
    default?: ((props: Record<string, never>) => any) | undefined;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
