import type { Booleanish, Breakpoint } from '../../types';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    tag: {
        type: import("vue").PropType<string>;
        default: string;
    };
    dark: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    fixed: {
        type: import("vue").PropType<"top" | "bottom">;
        default: undefined;
    };
    container: {
        type: import("vue").PropType<boolean | "fluid">;
        default: string;
    };
    variant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: null;
    };
    sticky: {
        type: import("vue").PropType<"top" | "bottom">;
        default: undefined;
    };
    print: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    toggleable: {
        type: import("vue").PropType<boolean | Breakpoint>;
        default: boolean;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    tag: {
        type: import("vue").PropType<string>;
        default: string;
    };
    dark: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    fixed: {
        type: import("vue").PropType<"top" | "bottom">;
        default: undefined;
    };
    container: {
        type: import("vue").PropType<boolean | "fluid">;
        default: string;
    };
    variant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: null;
    };
    sticky: {
        type: import("vue").PropType<"top" | "bottom">;
        default: undefined;
    };
    print: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    toggleable: {
        type: import("vue").PropType<boolean | Breakpoint>;
        default: boolean;
    };
}>>, {
    tag: string;
    dark: Booleanish;
    fixed: "top" | "bottom";
    container: boolean | "fluid";
    variant: keyof import("../../types").BaseColorVariant | null;
    sticky: "top" | "bottom";
    print: Booleanish;
    toggleable: boolean | Breakpoint;
}, {}>, {
    default?: ((props: Record<string, never>) => any) | undefined;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
