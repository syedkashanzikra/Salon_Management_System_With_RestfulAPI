import type { Booleanish } from '../../types';
declare const _default: import("vue").DefineComponent<{
    top: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    bottom: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    start: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    end: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    src: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    srcset: {
        type: import("vue").PropType<string | string[]>;
        default: undefined;
    };
    alt: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    width: {
        type: import("vue").PropType<string | number>;
        default: undefined;
    };
    height: {
        type: import("vue").PropType<string | number>;
        default: undefined;
    };
    lazy: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    sizes: {
        type: import("vue").PropType<string | string[]>;
        default: undefined;
    };
    blank: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    blankColor: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    load: (value: Event) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    top: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    bottom: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    start: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    end: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    src: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    srcset: {
        type: import("vue").PropType<string | string[]>;
        default: undefined;
    };
    alt: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    width: {
        type: import("vue").PropType<string | number>;
        default: undefined;
    };
    height: {
        type: import("vue").PropType<string | number>;
        default: undefined;
    };
    lazy: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    sizes: {
        type: import("vue").PropType<string | string[]>;
        default: undefined;
    };
    blank: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    blankColor: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
}>> & {
    onLoad?: ((value: Event) => any) | undefined;
}, {
    top: Booleanish;
    bottom: Booleanish;
    start: Booleanish;
    end: Booleanish;
    src: string;
    srcset: string | string[];
    alt: string;
    width: string | number;
    height: string | number;
    lazy: Booleanish;
    sizes: string | string[];
    blank: Booleanish;
    blankColor: string;
}, {}>;
export default _default;
