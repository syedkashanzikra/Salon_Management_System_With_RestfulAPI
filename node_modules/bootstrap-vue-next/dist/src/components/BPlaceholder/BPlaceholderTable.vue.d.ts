import type { Booleanish, PlaceholderAnimation, PlaceholderSize } from '../../types';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    size: {
        type: import("vue").PropType<PlaceholderSize>;
        default: string;
    };
    variant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: undefined;
    };
    animation: {
        type: import("vue").PropType<PlaceholderAnimation>;
        default: undefined;
    };
    columns: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    headerVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: undefined;
    };
    rows: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    hideHeader: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    headerAnimation: {
        type: import("vue").PropType<PlaceholderAnimation>;
        default: undefined;
    };
    headerSize: {
        type: import("vue").PropType<PlaceholderSize>;
        default: string;
    };
    footerVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: undefined;
    };
    footerAnimation: {
        type: import("vue").PropType<PlaceholderAnimation>;
        default: undefined;
    };
    footerSize: {
        type: import("vue").PropType<PlaceholderSize>;
        default: string;
    };
    cellWidth: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    headerColumns: {
        type: import("vue").PropType<string | number>;
        default: undefined;
    };
    headerCellWidth: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    footerColumns: {
        type: import("vue").PropType<string | number>;
        default: undefined;
    };
    showFooter: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    footerCellWidth: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: import("vue").PropType<PlaceholderSize>;
        default: string;
    };
    variant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: undefined;
    };
    animation: {
        type: import("vue").PropType<PlaceholderAnimation>;
        default: undefined;
    };
    columns: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    headerVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: undefined;
    };
    rows: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    hideHeader: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    headerAnimation: {
        type: import("vue").PropType<PlaceholderAnimation>;
        default: undefined;
    };
    headerSize: {
        type: import("vue").PropType<PlaceholderSize>;
        default: string;
    };
    footerVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: undefined;
    };
    footerAnimation: {
        type: import("vue").PropType<PlaceholderAnimation>;
        default: undefined;
    };
    footerSize: {
        type: import("vue").PropType<PlaceholderSize>;
        default: string;
    };
    cellWidth: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    headerColumns: {
        type: import("vue").PropType<string | number>;
        default: undefined;
    };
    headerCellWidth: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    footerColumns: {
        type: import("vue").PropType<string | number>;
        default: undefined;
    };
    showFooter: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    footerCellWidth: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
}>>, {
    size: PlaceholderSize;
    variant: keyof import("../../types").BaseColorVariant | null;
    animation: PlaceholderAnimation;
    columns: string | number;
    headerVariant: keyof import("../../types").BaseColorVariant | null;
    rows: string | number;
    hideHeader: Booleanish;
    headerAnimation: PlaceholderAnimation;
    headerSize: PlaceholderSize;
    footerVariant: keyof import("../../types").BaseColorVariant | null;
    footerAnimation: PlaceholderAnimation;
    footerSize: PlaceholderSize;
    cellWidth: string | number;
    headerColumns: string | number;
    headerCellWidth: string | number;
    footerColumns: string | number;
    showFooter: Booleanish;
    footerCellWidth: string | number;
}, {}>, {
    default?: ((props: Record<string, never>) => any) | undefined;
    thead?: ((props: Record<string, never>) => any) | undefined;
    tfoot?: ((props: Record<string, never>) => any) | undefined;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
