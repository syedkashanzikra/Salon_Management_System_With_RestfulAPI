import type { Booleanish, PlaceholderAnimation, PlaceholderSize } from '../../types';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    size: {
        type: import("vue").PropType<PlaceholderSize>;
        default: string;
    };
    variant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: undefined;
    };
    animation: {
        type: import("vue").PropType<PlaceholderAnimation>;
        default: undefined;
    };
    imgBottom: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    imgHeight: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    imgSrc: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    imgBlankColor: {
        type: import("vue").PropType<string>;
        default: string;
    };
    headerVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: undefined;
    };
    noHeader: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    headerWidth: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    headerAnimation: {
        type: import("vue").PropType<PlaceholderAnimation>;
        default: undefined;
    };
    headerSize: {
        type: import("vue").PropType<PlaceholderSize>;
        default: string;
    };
    noFooter: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    footerWidth: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    footerVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: undefined;
    };
    footerAnimation: {
        type: import("vue").PropType<PlaceholderAnimation>;
        default: undefined;
    };
    footerSize: {
        type: import("vue").PropType<PlaceholderSize>;
        default: string;
    };
    noButton: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    noImg: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: import("vue").PropType<PlaceholderSize>;
        default: string;
    };
    variant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: undefined;
    };
    animation: {
        type: import("vue").PropType<PlaceholderAnimation>;
        default: undefined;
    };
    imgBottom: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    imgHeight: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    imgSrc: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    imgBlankColor: {
        type: import("vue").PropType<string>;
        default: string;
    };
    headerVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: undefined;
    };
    noHeader: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    headerWidth: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    headerAnimation: {
        type: import("vue").PropType<PlaceholderAnimation>;
        default: undefined;
    };
    headerSize: {
        type: import("vue").PropType<PlaceholderSize>;
        default: string;
    };
    noFooter: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    footerWidth: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    footerVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: undefined;
    };
    footerAnimation: {
        type: import("vue").PropType<PlaceholderAnimation>;
        default: undefined;
    };
    footerSize: {
        type: import("vue").PropType<PlaceholderSize>;
        default: string;
    };
    noButton: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    noImg: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
}>>, {
    size: PlaceholderSize;
    variant: keyof import("../../types").BaseColorVariant | null;
    animation: PlaceholderAnimation;
    imgBottom: Booleanish;
    imgHeight: string | number;
    imgSrc: string;
    imgBlankColor: string;
    headerVariant: keyof import("../../types").BaseColorVariant | null;
    noHeader: Booleanish;
    headerWidth: string | number;
    headerAnimation: PlaceholderAnimation;
    headerSize: PlaceholderSize;
    noFooter: Booleanish;
    footerWidth: string | number;
    footerVariant: keyof import("../../types").BaseColorVariant | null;
    footerAnimation: PlaceholderAnimation;
    footerSize: PlaceholderSize;
    noButton: Booleanish;
    noImg: Booleanish;
}, {}>, {
    default?: ((props: Record<string, never>) => any) | undefined;
    img?: ((props: Record<string, never>) => any) | undefined;
    header?: ((props: Record<string, never>) => any) | undefined;
    footer?: ((props: Record<string, never>) => any) | undefined;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
