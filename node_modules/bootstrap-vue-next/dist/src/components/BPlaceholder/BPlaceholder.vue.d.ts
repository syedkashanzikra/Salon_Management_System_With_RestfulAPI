import type { PlaceholderAnimation, PlaceholderSize } from '../../types';
declare const _default: import("vue").DefineComponent<{
    tag: {
        type: import("vue").PropType<string>;
        default: string;
    };
    cols: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    width: {
        type: import("vue").PropType<string | number>;
        default: undefined;
    };
    size: {
        type: import("vue").PropType<PlaceholderSize>;
        default: string;
    };
    variant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: null;
    };
    animation: {
        type: import("vue").PropType<PlaceholderAnimation>;
        default: undefined;
    };
    wrapperTag: {
        type: import("vue").PropType<string>;
        default: string;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    tag: {
        type: import("vue").PropType<string>;
        default: string;
    };
    cols: {
        type: import("vue").PropType<string | number>;
        default: number;
    };
    width: {
        type: import("vue").PropType<string | number>;
        default: undefined;
    };
    size: {
        type: import("vue").PropType<PlaceholderSize>;
        default: string;
    };
    variant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: null;
    };
    animation: {
        type: import("vue").PropType<PlaceholderAnimation>;
        default: undefined;
    };
    wrapperTag: {
        type: import("vue").PropType<string>;
        default: string;
    };
}>>, {
    tag: string;
    cols: string | number;
    width: string | number;
    size: PlaceholderSize;
    variant: keyof import("../../types").BaseColorVariant | null;
    animation: PlaceholderAnimation;
    wrapperTag: string;
}, {}>;
export default _default;
