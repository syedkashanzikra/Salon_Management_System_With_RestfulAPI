import type { Booleanish, Breakpoint } from '../../types';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    dark: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    small: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    borderVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: null;
    };
    stacked: {
        type: import("vue").PropType<boolean | Breakpoint>;
        default: boolean;
    };
    bordered: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    borderless: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    captionTop: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    hover: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    responsive: {
        type: import("vue").PropType<boolean | Breakpoint>;
        default: boolean;
    };
    striped: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    tableClass: {
        type: import("vue").PropType<any>;
        default: undefined;
    };
    tableVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: null;
    };
    stickyHeader: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    dark: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    small: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    borderVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: null;
    };
    stacked: {
        type: import("vue").PropType<boolean | Breakpoint>;
        default: boolean;
    };
    bordered: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    borderless: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    captionTop: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    hover: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    responsive: {
        type: import("vue").PropType<boolean | Breakpoint>;
        default: boolean;
    };
    striped: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    tableClass: {
        type: import("vue").PropType<any>;
        default: undefined;
    };
    tableVariant: {
        type: import("vue").PropType<keyof import("../../types").BaseColorVariant | null>;
        default: null;
    };
    stickyHeader: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
}>>, {
    dark: Booleanish;
    small: Booleanish;
    borderVariant: keyof import("../../types").BaseColorVariant | null;
    stacked: boolean | Breakpoint;
    bordered: Booleanish;
    borderless: Booleanish;
    captionTop: Booleanish;
    hover: Booleanish;
    responsive: boolean | Breakpoint;
    striped: Booleanish;
    tableClass: any;
    tableVariant: keyof import("../../types").BaseColorVariant | null;
    stickyHeader: Booleanish;
}, {}>, {
    default?: ((props: Record<string, never>) => any) | undefined;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
