import type { Booleanish, ButtonType } from '../../types';
declare const _default: import("vue").DefineComponent<{
    type: {
        type: import("vue").PropType<ButtonType>;
        default: string;
    };
    disabled: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    white: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    ariaLabel: {
        type: import("vue").PropType<string>;
        default: string;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    click: (value: MouseEvent) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    type: {
        type: import("vue").PropType<ButtonType>;
        default: string;
    };
    disabled: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    white: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    ariaLabel: {
        type: import("vue").PropType<string>;
        default: string;
    };
}>> & {
    onClick?: ((value: MouseEvent) => any) | undefined;
}, {
    type: ButtonType;
    disabled: Booleanish;
    white: Booleanish;
    ariaLabel: string;
}, {}>;
export default _default;
