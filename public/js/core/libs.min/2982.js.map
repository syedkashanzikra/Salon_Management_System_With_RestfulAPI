{"version":3,"file":"js/core/libs.min/2982.js","mappings":"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","sources":["webpack:///./resources/js/vue/components/form-elements/FormFooter.vue","webpack:///./resources/js/vue/constants/custom_field.js","webpack:///./resources/js/Setting/SectionPages/Forms/FormCustomField.vue?81a6","webpack:///./resources/js/Setting/SectionPages/Forms/FormCustomField.vue","webpack:///./resources/js/Setting/SectionPages/CustomFieldsPage.vue?f534","webpack:///./resources/js/Setting/SectionPages/CustomFieldsPage.vue","webpack:///./resources/js/vue/components/form-elements/FormFooter.vue?3a8f","webpack:///./resources/js/vue/components/form-elements/FormHeader.vue"],"sourcesContent":["<template>\n  <div class=\"offcanvas-footer border-top\">\n    <div class=\"d-grid d-md-flex gap-3 p-3\">\n      <button class=\"btn btn-primary d-block\">\n        <i class=\"fa-solid fa-floppy-disk\"></i>\n        Save\n      </button>\n      <button class=\"btn btn-outline-primary d-block\" type=\"button\" data-bs-dismiss=\"offcanvas\">\n        <i class=\"fa-solid fa-angles-left\"></i>\n        Close\n      </button>\n    </div>\n  </div>\n</template>\n","export const MODULE = 'customfield'\nexport const LISTING_URL = () => {return {path: `customfield/index_list`, method: 'GET'}}\nexport const DATATABLE_URL = () => {return {path: `customfield/index_data`, method: 'GET'}}\nexport const EDIT_URL = (id) => {return {path: `${MODULE}/${id}/edit`, method: 'GET'}}\nexport const STORE_URL = () => {return {path: `${MODULE}`, method: 'POST'}}\nexport const UPDATE_URL = (id) => {return {path: `${MODULE}/${id}`, method: 'PUT'}}\nexport const DELETE_URL = (id) => {return {path: `${MODULE}/${id}`, method: 'DELETE'}}\n","import script from \"./FormCustomField.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FormCustomField.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <form @submit=\"formSubmit\">\n    <div class=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"form-offcanvas\" aria-labelledby=\"form-offcanvasLabel\">\n      <FormHeader :currentId=\"currentId\" editTitle=\"Edit CustomField Data\" createTitle=\"Add CustomField\"></FormHeader>\n      <div class=\"offcanvas-body\">\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"form-group\">\n              <label class=\"form-label\" for=\"type\">Module</label>\n              <Multiselect v-model=\"Module\" :value=\"Module\" v-bind=\"module_data\" id=\"Module\" autocomplete=\"off\"></Multiselect>\n              <span v-if=\"errorMessages['Module']\">\n                <ul class=\"text-danger\">\n                  <li v-for=\"err in errorMessages['Module']\" :key=\"err\">{{ err }}</li>\n                </ul>\n              </span>\n              <span class=\"text-danger\">{{ errors.Module }}</span>\n            </div>\n\n            <div class=\"form-group\">\n              <label class=\"form-label\" for=\"label\">Lable</label>\n              <input type=\"text\" class=\"form-control\" v-model=\"label\" id=\"label\" />\n              <span v-if=\"errorMessages['label']\">\n                <ul class=\"text-danger\">\n                  <li v-for=\"err in errorMessages['label']\" :key=\"err\">{{ err }}</li>\n                </ul>\n              </span>\n              <span class=\"text-danger\">{{ errors.label }}</span>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-label\" for=\"type\">Type</label>\n              <Multiselect v-model=\"type\" :value=\"type\" v-bind=\"type_data\" id=\"type\" autocomplete=\"off\"></Multiselect>\n              <span v-if=\"errorMessages['type']\">\n                <ul class=\"text-danger\">\n                  <li v-for=\"err in errorMessages['type']\" :key=\"err\">{{ err }}</li>\n                </ul>\n              </span>\n              <span class=\"text-danger\">{{ errors.type }}</span>\n            </div>\n            <div class=\"form-group\">\n              <div class=\"d-flex justify-content-between align-items-center\">\n                <label class=\"form-label\" for=\"category-status\">Is Required</label>\n                <div class=\"form-check form-switch\">\n                  <input class=\"form-check-input\" :value=\"1\" name=\"required\" id=\"required\" type=\"checkbox\" v-model=\"required\" />\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <div class=\"d-flex justify-content-between align-items-center\">\n                <label class=\"form-label\" for=\"category-status\">Allow export in table view</label>\n                <div class=\"form-check\">\n                  <input class=\"form-check-input\" :value=\"1\" name=\"is_export\" id=\"is_export\" type=\"checkbox\" v-model=\"is_export\" />\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <div class=\"d-flex justify-content-between align-items-center\">\n                <label class=\"form-label\" for=\"category-status\"> Show in table view</label>\n                <div class=\"form-check\">\n                  <input class=\"form-check-input\" :value=\"1\" name=\"is_view\" id=\"is_view\" type=\"checkbox\" v-model=\"is_view\" />\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group\" v-if=\"type === 'select' || type === 'radio' || type === 'checkbox'\">\n              <div v-for=\"(input, index) in inputFields\" :key=\"index\">\n                <label class=\"form-label\" for=\"label\">Value</label>\n                <div class=\"d-flex\">\n                  <input type=\"text\" class=\"form-control\" v-model=\"input.value\" />\n                  <a v-if=\"inputFields.length > 1\" class=\"btn btn-primary\" @click=\"deleteInputField(index)\">Delete</a>\n                </div>\n              </div>\n              <div class=\"mb-4\">\n                <a @click=\"addInputField\"\n                  ><h6><i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i> Add More</h6>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <FormFooter></FormFooter>\n    </div>\n  </form>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from 'vue'\nimport { DATATABLE_URL, EDIT_URL, STORE_URL, UPDATE_URL } from '@/vue/constants/custom_field'\nimport { useField, useForm } from 'vee-validate'\nimport { useRequest } from '@/helpers/hooks/useCrudOpration'\nimport * as yup from 'yup'\nimport { buildMultiSelectObject } from '@/helpers/utilities'\n\nimport FormHeader from '@/vue/components/form-elements/FormHeader.vue'\nimport FormFooter from '@/vue/components/form-elements/FormFooter.vue'\n\nconst emit = defineEmits(['onSubmit'])\n\n// props\nconst props = defineProps({\n  id: { type: Number, default: 0 }\n})\n\nconst { getRequest, storeRequest, updateRequest, listingRequest } = useRequest()\n\nconst currentId = ref(props.id)\n// Edit Form Or Create Form\nwatch(\n  () => props.id,\n  (value) => {\n    currentId.value = value\n    if (value > 0) {\n      getRequest({ url: EDIT_URL, id: value }).then((res) => {\n        if (res.status && res.data) {\n\n          inputFields.value=res.data.inputFields\n          setFormData(res.data)\n        }\n      })\n    } else {\n      setFormData(defaultData())\n    }\n  }\n)\n\nconst getModuleList = () => {\n  listingRequest({ url: DATATABLE_URL, data: { id: 0 } }).then((res) => (module_data.value.options = buildMultiSelectObject(res, { value: 'id', label: 'name' })))\n}\n\nonMounted(() => {\n  getModuleList()\n  addInputField()\n})\n\nconst module_data = ref({\n  searchable: true,\n  options: [],\n  closeOnSelect: true\n})\n\nconst type_data = ref({\n  searchable: true,\n  options: [\n    // { label: 'Weekly', value: 'Weekly'},\n    { label: 'Text', value: 'text' },\n    { label: 'Number', value: 'number' },\n    { label: 'Password', value: 'password' },\n    { label: 'Text Area', value: 'textarea' },\n    { label: 'Select', value: 'select' },\n    { label: 'Radio', value:'radio' },\n    { label: 'Date', value: 'date' },\n    { label: 'Check Box', value: 'checkbox' },\n    { label: 'Files', value: 'file' }\n  ],\n  closeOnSelect: true\n})\n\nconst inputFields = ref([])\n\nconst addInputField = () => {\n  inputFields.value.push({ value: '' })\n}\n\nconst deleteInputField = (index) => {\n  inputFields.value.splice(index, 1)\n}\n\n/*\n * Form Data & Validation & Handeling\n */\n// Default FORM DATA\nconst defaultData = () => {\n  errorMessages.value = {}\n  return {\n    Module: '',\n    label: '',\n    type: '',\n    required: '',\n    is_export: '',\n    is_view: '',\n    inputFields: []\n  }\n}\n\n//  Reset Form\nconst setFormData = (data) => {\n  resetForm({\n    values: {\n      Module: data.custom_field_group_id,\n      label: data.label,\n      type: data.type,\n      required: data.required ? true : false,\n      is_export: data.is_export ? true : false,\n      is_view: data.is_view ? true : false,\n    \n    }\n  })\n}\n\n// Reload Datatable, SnackBar Message, Alert, Offcanvas Close\nconst reset_datatable_close_offcanvas = (res) => {\n  if (res.status) {\n    window.successSnackbar(res.message)\n    // renderedDataTable.ajax.reload(null, false)\n    bootstrap.Offcanvas.getInstance('#form-offcanvas').hide()\n    setFormData(defaultData())\n  } else {\n    window.errorSnackbar(res.message)\n    errorMessages.value = res.all_message\n  }\n  emit('onSubmit')\n}\n\n// Validations\nconst validationSchema = yup.object({\n  Module: yup.number().required(),\n  label: yup.string().required(),\n  type: yup.string().required()\n})\n\nconst { handleSubmit, errors, resetForm } = useForm({\n  validationSchema\n})\nconst { value: Module } = useField('Module')\nconst { value: label } = useField('label')\nconst { value: type } = useField('type')\nconst { value: required } = useField('required')\nconst { value: is_export } = useField('is_export')\nconst { value: is_view } = useField('is_view')\n\nconst errorMessages = ref({})\n\n// Form Submit\nconst formSubmit = handleSubmit((values) => {\n\n  values.inputFields =  JSON.stringify(inputFields)\n\n  if (currentId.value > 0) {\n    updateRequest({ url: UPDATE_URL, id: currentId.value, body: values }).then((res) => reset_datatable_close_offcanvas(res))\n  } else {\n    storeRequest({ url: STORE_URL, body: values }).then((res) => reset_datatable_close_offcanvas(res))\n  }\n})\n</script>\n","import script from \"./CustomFieldsPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CustomFieldsPage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <CardTitle title=\"Custom Fields\" icon=\"fa-solid fa-bars\">\n    <button class=\"btn btn-primary me-2\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#form-offcanvas\" aria-controls=\"form-offcanvas\" @click=\"changeId(0)\">\n      <i class=\"fas fa-plus-circle me-2\"></i> Add new Field\n    </button>\n  </CardTitle>\n  \n  <FormCustomField :id=\"tableId\" @onSubmit=\"fetchTableData()\"></FormCustomField>\n\n  <div class=\"card card-accent-primary\">\n  <table class=\"table table-condensed\">\n  <thead>\n      <tr>\n        <th>Sr.No</th>\n        <th>Modules</th>\n        <th>Field lable</th>\n        <th>Type</th>\n        <th>Value</th>\n        <th>Is Required</th>\n        <th>Allow in Table View</th>\n        <th>Show in Table View</th>\n        <th>Action</th>\n      </tr>\n    </thead>\n    <template v-if=\"tableList !== null && tableList.length !== 0\">\n    <tbody>\n      <tr v-for=\"(item, index) in tableList\"  :key=\"index\" >\n        <td>{{index+1}}</td>\n        <td>{{item.custom_fields_group[0].name}}</td>\n        <td>{{item.label}}</td>\n        <td>{{item.type}}</td>\n        <td>{{item.values}}</td>\n        <td> <span v-if=\"item.required==1\">Yes</span><span v-else>No</span></td>\n        <td> <span v-if=\"item.is_export==1\">Yes</span><span v-else>No</span></td>\n        <td> <span v-if=\"item.is_view==1\">Yes</span><span v-else>No</span></td>\n\n        <th>\n          <button type=\"button\" class=\"btn btn-soft-primary btn-sm\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#form-offcanvas\"    @click=\"changeId(item.id)\"  aria-controls=\"form-offcanvas\" ><i class=\"fa-solid fa-pen-clip\"></i></button>\n          <!-- <button class=\"btn btn-primary\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#form-offcanvas\"   @click=\"changeId(dataValue.id)\" title=\"{{ __('Create Custom Field ') }}\" aria-controls=\"form-offcanvas\" ><i class=\"fas fa-plus-circle me-2\"></i> Add new Field</button> -->\n\n          <button type=\"button\" class=\"btn btn-soft-danger btn-sm\" @click=\"destroyData(item.id, 'Are you sure?')\"  data-bs-toggle=\"tooltip\"> <i class=\"fa-solid fa-trash\"></i></button>\n        </th>\n      </tr>\n    </tbody>\n\n  </template>\n\n    <template v-else>\n        <!-- Render message when tableList is null or empty -->\n        <tr class=\"text-center\">\n          <td colspan=\"9\" class=\"py-3\">Data is not available in this Table</td>\n        </tr>\n      </template>\n  </table>\n  </div>\n\n\n  </template>\n\n  <script setup>\n  import { ref, onMounted } from 'vue'\n  import CardTitle from '@/Setting/Components/CardTitle.vue'\n  import { LISTING_URL, DELETE_URL } from '@/vue/constants/custom_field'\n  import { useRequest } from '@/helpers/hooks/useCrudOpration'\n  import FormCustomField from './Forms/FormCustomField.vue'\n  import {confirmSwal} from '@/helpers/utilities'\n\n  const tableId = ref(null)\n  const changeId = (id) => {\n    tableId.value = id\n  }\n\n  onMounted(() => {\n      fetchTableData()\n    })\n\n  // Request\n  const { getRequest, deleteRequest} = useRequest()\n\n  // Define variables\n  const tableList = ref(null)\n\n  const fetchTableData = () => {\n    getRequest({ url: LISTING_URL}).then((res) => {\n       if(res.status) {\n        tableList.value = res.data\n         }\n      })\n    }\n\n    const destroyData = (id, message) => {\n      confirmSwal({title: message}).then((result) => {\n        if(!result.isConfirmed) return\n        deleteRequest({url: DELETE_URL, id}).then((res) => {\n          if(res.status) {\n            Swal.fire({\n              title: 'Deleted',\n              text: res.message,\n              icon: \"success\"\n            })\n            fetchTableData()\n          }\n        })\n      })\n    }\n\n  </script>\n","import { render } from \"./FormFooter.vue?vue&type=template&id=505dbe43\"\nconst script = {}\n\nimport exportComponent from \"/var/www/html/frezka/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import script from \"./FormHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FormHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_hoisted_3","MODULE","LISTING_URL","path","method","DATATABLE_URL","EDIT_URL","id","concat","STORE_URL","UPDATE_URL","DELETE_URL","_useRequest","useRequest","getRequest","storeRequest","updateRequest","listingRequest","currentId","ref","props","watch","value","url","then","res","status","data","inputFields","setFormData","defaultData","onMounted","module_data","options","buildMultiSelectObject","label","addInputField","searchable","closeOnSelect","type_data","push","errorMessages","Module","type","required","is_export","is_view","resetForm","values","custom_field_group_id","reset_datatable_close_offcanvas","window","successSnackbar","message","bootstrap","Offcanvas","getInstance","hide","errorSnackbar","all_message","emit","validationSchema","yup","_useForm","useForm","handleSubmit","errors","useField","formSubmit","JSON","stringify","body","index","splice","tableId","changeId","fetchTableData","deleteRequest","tableList","confirmSwal","title","result","isConfirmed","Swal","fire","text","icon","script"],"sourceRoot":""}